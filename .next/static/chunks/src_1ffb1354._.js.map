{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/nikita/Desktop/bankDash/BankDash/src/utiles/getToolTip.ts"],"sourcesContent":["export function getToolTip() {\n  return {\n    tooltip: {\n      backgroundColor: '#ffffff',\n      borderColor: '#718ebf',\n      borderWidth: 1,\n      titleColor: '#343c6a',\n      bodyColor: '#718ebf',\n      cornerRadius: 11,\n      usePointStyle: true,\n    },\n  }\n}\n"],"names":[],"mappings":";;;AAAO,SAAS;IACd,OAAO;QACL,SAAS;YACP,iBAAiB;YACjB,aAAa;YACb,aAAa;YACb,YAAY;YACZ,WAAW;YACX,cAAc;YACd,eAAe;QACjB;IACF;AACF","debugId":null}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":["file:///Users/nikita/Desktop/bankDash/BankDash/src/components/UI/Chart/Circle/useCircleChartData.ts"],"sourcesContent":["import { IChartCircle } from '@/types/Chart.interface'\nimport { getToolTip } from '@/utiles/getToolTip'\n\nexport function useCircleChartData(DATA: IChartCircle) {\n  const data = {\n    labels: DATA.labels,\n    datasets: [\n      {\n        label: DATA.label,\n        data: DATA.datasets,\n        backgroundColor: DATA.backgroundColor,\n        borderWidth: DATA.border,\n      },\n    ],\n  }\n\n  const options = {\n    layout: {\n      padding: 0,\n    },\n    cutout: DATA.cutout,\n    plugins: {\n      legend: {\n        display: true,\n        position: 'bottom',\n        labels: {\n          color: '#718ebf',\n          usePointStyle: true,\n          pointStyle: 'circle',\n          padding: DATA.padding,\n        },\n        align: 'center',\n      },\n      ...getToolTip(),\n    },\n  }\n\n  return { options, data }\n}\n"],"names":[],"mappings":";;;AACA;;AAEO,SAAS,mBAAmB,IAAkB;IACnD,MAAM,OAAO;QACX,QAAQ,KAAK,MAAM;QACnB,UAAU;YACR;gBACE,OAAO,KAAK,KAAK;gBACjB,MAAM,KAAK,QAAQ;gBACnB,iBAAiB,KAAK,eAAe;gBACrC,aAAa,KAAK,MAAM;YAC1B;SACD;IACH;IAEA,MAAM,UAAU;QACd,QAAQ;YACN,SAAS;QACX;QACA,QAAQ,KAAK,MAAM;QACnB,SAAS;YACP,QAAQ;gBACN,SAAS;gBACT,UAAU;gBACV,QAAQ;oBACN,OAAO;oBACP,eAAe;oBACf,YAAY;oBACZ,SAAS,KAAK,OAAO;gBACvB;gBACA,OAAO;YACT;YACA,GAAG,CAAA,GAAA,8HAAA,CAAA,aAAU,AAAD,GAAG;QACjB;IACF;IAEA,OAAO;QAAE;QAAS;IAAK;AACzB","debugId":null}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file:///Users/nikita/Desktop/bankDash/BankDash/src/components/UI/Chart/Circle/Circle-chart.tsx"],"sourcesContent":["import { IChartCircle } from '@/types/Chart.interface'\nimport { useCircleChartData } from './useCircleChartData'\n\nimport { Doughnut } from 'react-chartjs-2'\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js'\nChartJS.register(ArcElement, Tooltip, Legend)\n\nexport const CircleChart = ({ chartData }: { chartData: IChartCircle }) => {\n  const { data, options } = useCircleChartData({ ...chartData })\n  return (\n    <>\n      {/* @ts-ignore */}\n      <Doughnut data={data} options={options} />\n    </>\n  )\n}\n"],"names":[],"mappings":";;;;AACA;AAEA;AACA;;;;;;AACA,+JAAA,CAAA,QAAO,CAAC,QAAQ,CAAC,+JAAA,CAAA,aAAU,EAAE,+JAAA,CAAA,UAAO,EAAE,+JAAA,CAAA,SAAM;AAErC,MAAM,cAAc,CAAC,EAAE,SAAS,EAA+B;;IACpE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,mKAAA,CAAA,qBAAkB,AAAD,EAAE;QAAE,GAAG,SAAS;IAAC;IAC5D,qBACE;kBAEE,cAAA,6LAAC,yJAAA,CAAA,WAAQ;YAAC,MAAM;YAAM,SAAS;;;;;;;AAGrC;GARa;;QACe,mKAAA,CAAA,qBAAkB;;;KADjC","debugId":null}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file:///Users/nikita/Desktop/bankDash/BankDash/src/components/screens/credit/CardBankStatistics/useBank%D0%A1alculator.ts"],"sourcesContent":["import { ICard } from '@/types/User.type'\nimport { useMemo } from 'react'\n\ninterface IData {\n  bank: string\n  value: number\n}\n\nexport function useBank小alculator({ cards }: { cards: ICard[] }) {\n  const BANK_CARDS_STATISTICS_DATA = useMemo(() => {\n    let data: IData[] = []\n    console.log('hey')\n    cards.forEach((el) => {\n      const bank = el.bank + ' Bank'\n      const dataElement = data.find((label) => label.bank === bank)\n      if (!dataElement) {\n        data.push({\n          bank: bank,\n          value: 1,\n        })\n      } else {\n        dataElement.value++\n      }\n    })\n\n    const labels: string[] = []\n    const datasets: number[] = []\n\n    data.forEach((el) => {\n      labels.push(el.bank)\n      datasets.push(el.value)\n    })\n\n    const colors = ['#16DBCC', '#FF82AC', '#FFBB38', '#4C78FF']\n\n    return {\n      labels: labels,\n      datasets: datasets,\n      backgroundColor: labels.map((_, i) => colors[i % labels.length]),\n      border: 0,\n      cutout: '50',\n      label: 'value ',\n      padding: 15,\n    }\n  }, [cards])\n  return { BANK_CARDS_STATISTICS_DATA }\n}\n"],"names":[],"mappings":";;;AACA;;;AAOO,SAAS,kBAAkB,EAAE,KAAK,EAAsB;;IAC7D,MAAM,6BAA6B,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;iEAAE;YACzC,IAAI,OAAgB,EAAE;YACtB,QAAQ,GAAG,CAAC;YACZ,MAAM,OAAO;yEAAC,CAAC;oBACb,MAAM,OAAO,GAAG,IAAI,GAAG;oBACvB,MAAM,cAAc,KAAK,IAAI;6FAAC,CAAC,QAAU,MAAM,IAAI,KAAK;;oBACxD,IAAI,CAAC,aAAa;wBAChB,KAAK,IAAI,CAAC;4BACR,MAAM;4BACN,OAAO;wBACT;oBACF,OAAO;wBACL,YAAY,KAAK;oBACnB;gBACF;;YAEA,MAAM,SAAmB,EAAE;YAC3B,MAAM,WAAqB,EAAE;YAE7B,KAAK,OAAO;yEAAC,CAAC;oBACZ,OAAO,IAAI,CAAC,GAAG,IAAI;oBACnB,SAAS,IAAI,CAAC,GAAG,KAAK;gBACxB;;YAEA,MAAM,SAAS;gBAAC;gBAAW;gBAAW;gBAAW;aAAU;YAE3D,OAAO;gBACL,QAAQ;gBACR,UAAU;gBACV,iBAAiB,OAAO,GAAG;6EAAC,CAAC,GAAG,IAAM,MAAM,CAAC,IAAI,OAAO,MAAM,CAAC;;gBAC/D,QAAQ;gBACR,QAAQ;gBACR,OAAO;gBACP,SAAS;YACX;QACF;gEAAG;QAAC;KAAM;IACV,OAAO;QAAE;IAA2B;AACtC;GAtCgB","debugId":null}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":["file:///Users/nikita/Desktop/bankDash/BankDash/src/components/screens/credit/CardBankStatistics/CardBankStatistics.tsx"],"sourcesContent":["import { CircleChart } from '@/components/UI/Chart/Circle/Circle-chart'\nimport { ICard } from '@/types/User.type'\nimport { NotEnougtData } from '@/components/UI/NotEnougtData/NotEnougtData'\nimport { useBank小alculator } from './useBank小alculator'\n\nconst CardBankStatistics = ({ cards }: { cards: ICard[] }) => {\n  if (!cards) {\n    return <NotEnougtData />\n  }\n  const { BANK_CARDS_STATISTICS_DATA } = useBank小alculator({ cards })\n\n  return (\n    <>\n      <CircleChart chartData={BANK_CARDS_STATISTICS_DATA} />\n    </>\n  )\n}\n\nexport default CardBankStatistics\n"],"names":[],"mappings":";;;;AAAA;AAEA;AACA;;;;;;AAEA,MAAM,qBAAqB,CAAC,EAAE,KAAK,EAAsB;;IACvD,IAAI,CAAC,OAAO;QACV,qBAAO,6LAAC,6JAAA,CAAA,gBAAa;;;;;IACvB;IACA,MAAM,EAAE,0BAA0B,EAAE,GAAG,CAAA,GAAA,yLAAA,CAAA,oBAAiB,AAAD,EAAE;QAAE;IAAM;IAEjE,qBACE;kBACE,cAAA,6LAAC,iKAAA,CAAA,cAAW;YAAC,WAAW;;;;;;;AAG9B;GAXM;;QAImC,yLAAA,CAAA,oBAAiB;;;KAJpD;uCAaS","debugId":null}}]
}