{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/UI/MyExpense/MyExpense.module.scss.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"wrapper\": \"MyExpense-module-scss-module__L0uFrq__wrapper\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/nikita/Desktop/bankDash/BankDash/src/utiles/getToolTip.ts"],"sourcesContent":["export function getToolTip() {\n  return {\n    tooltip: {\n      backgroundColor: '#ffffff',\n      borderColor: '#718ebf',\n      borderWidth: 1,\n      titleColor: '#343c6a',\n      bodyColor: '#718ebf',\n      cornerRadius: 11,\n      usePointStyle: true,\n    },\n  }\n}\n"],"names":[],"mappings":";;;AAAO,SAAS;IACd,OAAO;QACL,SAAS;YACP,iBAAiB;YACjB,aAAa;YACb,aAAa;YACb,YAAY;YACZ,WAAW;YACX,cAAc;YACd,eAAe;QACjB;IACF;AACF","debugId":null}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///Users/nikita/Desktop/bankDash/BankDash/src/components/UI/Chart/Bar/useBarChartData.ts"],"sourcesContent":["import { IChartBar } from '@/types/Chart.interface'\nimport { getToolTip } from '@/utiles/getToolTip'\n\nexport function useBarChartData(DATA: IChartBar) {\n  // DATA = DATA.chartData\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      title: {\n        display: DATA.isTitle, // title\n        text: DATA.title,\n      },\n      legend: {\n        display: DATA.isLegend, // legend\n        position: 'top',\n        align: 'end',\n        labels: {\n          color: '#718ebf',\n          usePointStyle: true,\n          pointStyle: 'circle',\n          padding: 10,\n        },\n      },\n      ...getToolTip(),\n    },\n    scales: {\n      x: {\n        border: {\n          display: false,\n        },\n        grid: {\n          display: false,\n        },\n        ticks: {\n          color: '#718ebf',\n          maxTicksLimit: 7,\n          drawTicks: false,\n        },\n      },\n      y: {\n        beginAtZero: true,\n        border: {\n          display: false,\n        },\n        ticks: {\n          display: DATA.isGrid, // grid\n          drawTicks: true,\n          color: '#718ebf',\n          padding: 15,\n          maxTicksLimit: 5,\n        },\n        grid: {\n          display: DATA.isGrid, // grid\n          color: '#F3F3F5',\n          drawBorder: true,\n        },\n      },\n    },\n  }\n  const data = {\n    labels: DATA.labels,\n    datasets: DATA.datasets,\n  }\n\n  return { options, data }\n}\n"],"names":[],"mappings":";;;AACA;;AAEO,SAAS,gBAAgB,IAAe;IAC7C,wBAAwB;IAExB,MAAM,UAAU;QACd,YAAY;QACZ,qBAAqB;QACrB,SAAS;YACP,OAAO;gBACL,SAAS,KAAK,OAAO;gBACrB,MAAM,KAAK,KAAK;YAClB;YACA,QAAQ;gBACN,SAAS,KAAK,QAAQ;gBACtB,UAAU;gBACV,OAAO;gBACP,QAAQ;oBACN,OAAO;oBACP,eAAe;oBACf,YAAY;oBACZ,SAAS;gBACX;YACF;YACA,GAAG,CAAA,GAAA,8HAAA,CAAA,aAAU,AAAD,GAAG;QACjB;QACA,QAAQ;YACN,GAAG;gBACD,QAAQ;oBACN,SAAS;gBACX;gBACA,MAAM;oBACJ,SAAS;gBACX;gBACA,OAAO;oBACL,OAAO;oBACP,eAAe;oBACf,WAAW;gBACb;YACF;YACA,GAAG;gBACD,aAAa;gBACb,QAAQ;oBACN,SAAS;gBACX;gBACA,OAAO;oBACL,SAAS,KAAK,MAAM;oBACpB,WAAW;oBACX,OAAO;oBACP,SAAS;oBACT,eAAe;gBACjB;gBACA,MAAM;oBACJ,SAAS,KAAK,MAAM;oBACpB,OAAO;oBACP,YAAY;gBACd;YACF;QACF;IACF;IACA,MAAM,OAAO;QACX,QAAQ,KAAK,MAAM;QACnB,UAAU,KAAK,QAAQ;IACzB;IAEA,OAAO;QAAE;QAAS;IAAK;AACzB","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///Users/nikita/Desktop/bankDash/BankDash/src/components/UI/Chart/Bar/Bar-chart.tsx"],"sourcesContent":["import { IChartBar } from '@/types/Chart.interface'\nimport { useBarChartData } from './useBarChartData'\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js'\nimport { Bar } from 'react-chartjs-2'\n\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend)\nexport const BarChart = ({ chartData }: { chartData: IChartBar }) => {\n  const { options, data } = useBarChartData({ ...chartData })\n\n  return (\n    <>\n      {/* @ts-ignore */}\n      <Bar options={options} data={data} />\n    </>\n  )\n}\n"],"names":[],"mappings":";;;;AACA;AAEA;AASA;;;;;;AAEA,+JAAA,CAAA,QAAO,CAAC,QAAQ,CAAC,+JAAA,CAAA,gBAAa,EAAE,+JAAA,CAAA,cAAW,EAAE,+JAAA,CAAA,aAAU,EAAE,+JAAA,CAAA,QAAK,EAAE,+JAAA,CAAA,UAAO,EAAE,+JAAA,CAAA,SAAM;AACxE,MAAM,WAAW,CAAC,EAAE,SAAS,EAA4B;;IAC9D,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,6JAAA,CAAA,kBAAe,AAAD,EAAE;QAAE,GAAG,SAAS;IAAC;IAEzD,qBACE;kBAEE,cAAA,6LAAC,yJAAA,CAAA,MAAG;YAAC,SAAS;YAAS,MAAM;;;;;;;AAGnC;GATa;;QACe,6JAAA,CAAA,kBAAe;;;KAD9B","debugId":null}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":["file:///Users/nikita/Desktop/bankDash/BankDash/src/utiles/getDateByDays.ts"],"sourcesContent":["export const getDateByDays = (day: number) => {\n  const date = new Date()\n  date.setDate(date.getDate() - day)\n  return date.toISOString()\n}\n"],"names":[],"mappings":";;;AAAO,MAAM,gBAAgB,CAAC;IAC5B,MAAM,OAAO,IAAI;IACjB,KAAK,OAAO,CAAC,KAAK,OAAO,KAAK;IAC9B,OAAO,KAAK,WAAW;AACzB","debugId":null}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file:///Users/nikita/Desktop/bankDash/BankDash/src/hooks/useTransactionsByDate.ts"],"sourcesContent":["import { transactionsService } from '@/service/transaction.service'\nimport { IUser } from '@/types/User.type'\nimport { getDateByDays } from '@/utiles/getDateByDays'\nimport { useQuery, useQueryClient } from '@tanstack/react-query'\n\nexport const useTransactionsByDate = (day: number) => {\n  const user = useQueryClient().getQueryData(['user']) as IUser\n\n  const result: string[] = []\n  user?.cards?.forEach((card) => result.push(card.number))\n\n  const date = getDateByDays(day)\n\n  const { data, isLoading, isSuccess } = useQuery({\n    queryKey: ['transactions', 'byDate'],\n    queryFn: () => transactionsService.getByDate(result, date),\n    select: (data) => data.data,\n  })\n\n  return { data, isLoading, isSuccess }\n}\n"],"names":[],"mappings":";;;AAAA;AAEA;AACA;AAAA;;;;;AAEO,MAAM,wBAAwB,CAAC;;IACpC,MAAM,OAAO,CAAA,GAAA,yLAAA,CAAA,iBAAc,AAAD,IAAI,YAAY,CAAC;QAAC;KAAO;IAEnD,MAAM,SAAmB,EAAE;IAC3B,MAAM,OAAO,QAAQ,CAAC,OAAS,OAAO,IAAI,CAAC,KAAK,MAAM;IAEtD,MAAM,OAAO,CAAA,GAAA,iIAAA,CAAA,gBAAa,AAAD,EAAE;IAE3B,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,8KAAA,CAAA,WAAQ,AAAD,EAAE;QAC9C,UAAU;YAAC;YAAgB;SAAS;QACpC,OAAO;8CAAE,IAAM,2IAAA,CAAA,sBAAmB,CAAC,SAAS,CAAC,QAAQ;;QACrD,MAAM;8CAAE,CAAC,OAAS,KAAK,IAAI;;IAC7B;IAEA,OAAO;QAAE;QAAM;QAAW;IAAU;AACtC;GAfa;;QACE,yLAAA,CAAA,iBAAc;QAOY,8KAAA,CAAA,WAAQ","debugId":null}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"sources":["file:///Users/nikita/Desktop/bankDash/BankDash/src/components/UI/MyExpense/useMyExpenseCalculator.ts"],"sourcesContent":["import { TRANSACTIONS } from '@/config/constants'\nimport { ITransaction } from '../AllTransactions/AllTransactions.interface'\nimport { useMemo } from 'react'\n\nexport const useMyExpenseCalculator = (transactions: ITransaction[]) => {\n  const MY_EXPENSE_DATA = useMemo(() => {\n    const days = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n    const DATA: Record<string, number> = {}\n    transactions?.forEach((el) => {\n      if (el.type === TRANSACTIONS.type.outgoing) {\n        const date = new Date(el.date)\n        const day = days[date.getDay() - 1]\n        if (!DATA[day]) {\n          DATA[day] = Number(el.amount)\n        } else {\n          DATA[day] += Number(el.amount)\n        }\n      }\n    })\n    return {\n      isTitle: false,\n      isLegend: false,\n      isGrid: false,\n      labels: Object.keys(DATA),\n      datasets: [\n        {\n          label: 'Dataset 2',\n          data: Object.values(DATA),\n          backgroundColor: '#EDF0F7',\n          borderRadius: 10,\n          borderSkipped: false,\n          borderWidth: 7,\n          borderColor: '#EDF0F7',\n          hoverBorderWidth: 6,\n          hoverBackgroundColor: '#16DBCC',\n          hoverBorderColor: '#16DBCC',\n        },\n      ],\n    }\n  }, [transactions])\n\n  return { MY_EXPENSE_DATA }\n}\n"],"names":[],"mappings":";;;AAAA;AAEA;;;;AAEO,MAAM,yBAAyB,CAAC;;IACrC,MAAM,kBAAkB,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;2DAAE;YAC9B,MAAM,OAAO;gBAAC;gBAAO;gBAAO;gBAAO;gBAAO;gBAAO;gBAAO;aAAM;YAC9D,MAAM,OAA+B,CAAC;YACtC,cAAc;mEAAQ,CAAC;oBACrB,IAAI,GAAG,IAAI,KAAK,6HAAA,CAAA,eAAY,CAAC,IAAI,CAAC,QAAQ,EAAE;wBAC1C,MAAM,OAAO,IAAI,KAAK,GAAG,IAAI;wBAC7B,MAAM,MAAM,IAAI,CAAC,KAAK,MAAM,KAAK,EAAE;wBACnC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;4BACd,IAAI,CAAC,IAAI,GAAG,OAAO,GAAG,MAAM;wBAC9B,OAAO;4BACL,IAAI,CAAC,IAAI,IAAI,OAAO,GAAG,MAAM;wBAC/B;oBACF;gBACF;;YACA,OAAO;gBACL,SAAS;gBACT,UAAU;gBACV,QAAQ;gBACR,QAAQ,OAAO,IAAI,CAAC;gBACpB,UAAU;oBACR;wBACE,OAAO;wBACP,MAAM,OAAO,MAAM,CAAC;wBACpB,iBAAiB;wBACjB,cAAc;wBACd,eAAe;wBACf,aAAa;wBACb,aAAa;wBACb,kBAAkB;wBAClB,sBAAsB;wBACtB,kBAAkB;oBACpB;iBACD;YACH;QACF;0DAAG;QAAC;KAAa;IAEjB,OAAO;QAAE;IAAgB;AAC3B;GAtCa","debugId":null}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":["file:///Users/nikita/Desktop/bankDash/BankDash/src/components/UI/MyExpense/MyExpense.tsx"],"sourcesContent":["'use client'\n\nimport CardWrapper from '@/components/loayout/CardWrapper/CardWrapper'\nimport styles from './MyExpense.module.scss'\nimport { NotEnougtData } from '../NotEnougtData/NotEnougtData'\nimport { BarChart } from '../Chart/Bar/Bar-chart'\nimport { useQueryClient } from '@tanstack/react-query'\nimport { IUser } from '@/types/User.type'\nimport { getDateByDays } from '@/utiles/getDateByDays'\nimport { useTransactionsByDate } from '@/hooks/useTransactionsByDate'\nimport { useMyExpenseCalculator } from './useMyExpenseCalculator'\n\nconst MyExpense = () => {\n  const { data: transactions, isLoading } = useTransactionsByDate(7)\n\n  if (!transactions && !isLoading) {\n    return <NotEnougtData />\n  }\n\n  const { MY_EXPENSE_DATA } = useMyExpenseCalculator(transactions)\n\n  return (\n    <div className={styles.wrapper}>\n      <h2>My Expense</h2>\n      <CardWrapper>\n        <BarChart chartData={MY_EXPENSE_DATA} />\n      </CardWrapper>\n    </div>\n  )\n}\n\nexport default MyExpense\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAIA;AACA;;;AAVA;;;;;;;AAYA,MAAM,YAAY;;IAChB,MAAM,EAAE,MAAM,YAAY,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,wIAAA,CAAA,wBAAqB,AAAD,EAAE;IAEhE,IAAI,CAAC,gBAAgB,CAAC,WAAW;QAC/B,qBAAO,6LAAC,6JAAA,CAAA,gBAAa;;;;;IACvB;IAEA,MAAM,EAAE,eAAe,EAAE,GAAG,CAAA,GAAA,iKAAA,CAAA,yBAAsB,AAAD,EAAE;IAEnD,qBACE,6LAAC;QAAI,WAAW,kLAAA,CAAA,UAAM,CAAC,OAAO;;0BAC5B,6LAAC;0BAAG;;;;;;0BACJ,6LAAC,8JAAA,CAAA,UAAW;0BACV,cAAA,6LAAC,2JAAA,CAAA,WAAQ;oBAAC,WAAW;;;;;;;;;;;;;;;;;AAI7B;GAjBM;;QACsC,wIAAA,CAAA,wBAAqB;QAMnC,iKAAA,CAAA,yBAAsB;;;KAP9C;uCAmBS","debugId":null}}]
}