{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/UI/BalanceHistory/BalanceHistory.module.scss.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"card\": \"BalanceHistory-module-scss-module__Qe6GUW__card\",\n  \"wrapper\": \"BalanceHistory-module-scss-module__Qe6GUW__wrapper\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA"}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["file:///Users/nikita/Desktop/bankDash/BankDash/src/components/UI/BalanceHistory/BalanceHistory.data.ts"],"sourcesContent":["export const BALANCE_HISTORY_DATA = {\n  scale: 0.5,\n  XGrid: false,\n  label: '',\n  pointBorderWidth: 0,\n  pointRadius: 0,\n  borderColor: '#1814F3',\n}\n"],"names":[],"mappings":";;;AAAO,MAAM,uBAAuB;IAClC,OAAO;IACP,OAAO;IACP,OAAO;IACP,kBAAkB;IAClB,aAAa;IACb,aAAa;AACf","debugId":null}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file:///Users/nikita/Desktop/bankDash/BankDash/src/components/UI/Chart/Line/useLineChartData.ts"],"sourcesContent":["import { IChartLine } from '@/types/Chart.interface'\nimport { getCardValues } from '@/utiles/getCardValues'\nimport { getToolTip } from '@/utiles/getToolTip'\nimport { callback } from 'chart.js/helpers'\n//\n\nexport function useLineChartData(DATA: IChartLine) {\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    elements: {\n      line: {\n        tension: DATA.scale, //  scale\n      },\n    },\n    scales: {\n      x: {\n        border: {\n          display: false,\n        },\n        grid: {\n          display: DATA.XGrid, // XGrid\n        },\n        ticks: {\n          color: '#718ebf',\n          autoSkip: true,\n          maxTicksLimit: 7,\n          drawTicks: false,\n          // @ts-ignore\n          // callback(value, index, ticks) {\n          //   // @ts-ignore\n          //   const label = this.getLabelForValue(value)\n          //   // @ts-ignore\n          //   return index === this.chart.data.labels.indexOf(label) ? label : ''\n          // },\n        },\n      },\n      y: {\n        beginAtZero: true,\n        border: {\n          display: false,\n          dash: [3, 3],\n        },\n        ticks: {\n          drawTicks: true,\n          color: '#718ebf',\n          padding: 15,\n          maxTicksLimit: 5,\n          callback: function (value: any) {\n            return '$' + getCardValues.balance(value)\n          },\n        },\n        grid: {\n          color: '#718ebf7a',\n          drawBorder: true,\n        },\n      },\n    },\n    plugins: {\n      legend: {\n        display: false,\n      },\n      ...getToolTip(),\n    },\n  }\n\n  const data = {\n    labels: DATA.labes,\n    datasets: [\n      {\n        label: DATA.label,\n        data: DATA.data,\n        borderColor: DATA.borderColor,\n        borderWidth: 3, // 3\n        pointBorderWidth: DATA.pointBorderWidth, // 2\n        pointRadius: DATA.pointRadius, // 5\n        pointBackgroundColor: '#fff', // #fff\n      },\n    ],\n  }\n  return { data, options }\n}\n"],"names":[],"mappings":";;;AACA;AACA;;;AAIO,SAAS,iBAAiB,IAAgB;IAC/C,MAAM,UAAU;QACd,YAAY;QACZ,qBAAqB;QACrB,UAAU;YACR,MAAM;gBACJ,SAAS,KAAK,KAAK;YACrB;QACF;QACA,QAAQ;YACN,GAAG;gBACD,QAAQ;oBACN,SAAS;gBACX;gBACA,MAAM;oBACJ,SAAS,KAAK,KAAK;gBACrB;gBACA,OAAO;oBACL,OAAO;oBACP,UAAU;oBACV,eAAe;oBACf,WAAW;gBAQb;YACF;YACA,GAAG;gBACD,aAAa;gBACb,QAAQ;oBACN,SAAS;oBACT,MAAM;wBAAC;wBAAG;qBAAE;gBACd;gBACA,OAAO;oBACL,WAAW;oBACX,OAAO;oBACP,SAAS;oBACT,eAAe;oBACf,UAAU,SAAU,KAAU;wBAC5B,OAAO,MAAM,iIAAA,CAAA,gBAAa,CAAC,OAAO,CAAC;oBACrC;gBACF;gBACA,MAAM;oBACJ,OAAO;oBACP,YAAY;gBACd;YACF;QACF;QACA,SAAS;YACP,QAAQ;gBACN,SAAS;YACX;YACA,GAAG,CAAA,GAAA,8HAAA,CAAA,aAAU,AAAD,GAAG;QACjB;IACF;IAEA,MAAM,OAAO;QACX,QAAQ,KAAK,KAAK;QAClB,UAAU;YACR;gBACE,OAAO,KAAK,KAAK;gBACjB,MAAM,KAAK,IAAI;gBACf,aAAa,KAAK,WAAW;gBAC7B,aAAa;gBACb,kBAAkB,KAAK,gBAAgB;gBACvC,aAAa,KAAK,WAAW;gBAC7B,sBAAsB;YACxB;SACD;IACH;IACA,OAAO;QAAE;QAAM;IAAQ;AACzB","debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///Users/nikita/Desktop/bankDash/BankDash/src/utiles/shadowLinePlugin.ts"],"sourcesContent":["export const shadowLinePlugin = {\n  id: 'shadowLine',\n  beforeDatasetsDraw(chart: { ctx: any }) {\n    const { ctx } = chart\n\n    ctx.save()\n\n    ctx.shadowColor = '#1814F3'\n    ctx.shadowBlur = 60\n    ctx.shadowOffsetX = 0\n    ctx.shadowOffsetY = 30\n  },\n  afterDatasetsDraw(chart: { ctx: { restore: () => void } }) {\n    chart.ctx.restore()\n  },\n}\n"],"names":[],"mappings":";;;AAAO,MAAM,mBAAmB;IAC9B,IAAI;IACJ,oBAAmB,KAAmB;QACpC,MAAM,EAAE,GAAG,EAAE,GAAG;QAEhB,IAAI,IAAI;QAER,IAAI,WAAW,GAAG;QAClB,IAAI,UAAU,GAAG;QACjB,IAAI,aAAa,GAAG;QACpB,IAAI,aAAa,GAAG;IACtB;IACA,mBAAkB,KAAuC;QACvD,MAAM,GAAG,CAAC,OAAO;IACnB;AACF","debugId":null}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["file:///Users/nikita/Desktop/bankDash/BankDash/src/components/UI/Chart/Line/Line-chart.tsx"],"sourcesContent":["import { IChartLine } from '@/types/Chart.interface'\nimport { useLineChartData } from './useLineChartData'\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js'\nimport { Line } from 'react-chartjs-2'\nimport { shadowLinePlugin } from '@/utiles/shadowLinePlugin'\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n)\n\nexport const LineChart = ({\n  chartData,\n  isPlugin = false,\n}: {\n  chartData: IChartLine\n  isPlugin?: boolean\n}) => {\n  const { data, options } = useLineChartData({ ...chartData })\n  return (\n    <>\n      <Line\n        options={options}\n        data={data}\n        plugins={isPlugin ? [shadowLinePlugin] : []}\n      />\n    </>\n  )\n}\n"],"names":[],"mappings":";;;;AACA;AAEA;AAUA;AACA;;;;;;;AAEA,+JAAA,CAAA,QAAO,CAAC,QAAQ,CACd,+JAAA,CAAA,gBAAa,EACb,+JAAA,CAAA,cAAW,EACX,+JAAA,CAAA,eAAY,EACZ,+JAAA,CAAA,cAAW,EACX,+JAAA,CAAA,QAAK,EACL,+JAAA,CAAA,UAAO,EACP,+JAAA,CAAA,SAAM;AAGD,MAAM,YAAY,CAAC,EACxB,SAAS,EACT,WAAW,KAAK,EAIjB;;IACC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,+JAAA,CAAA,mBAAgB,AAAD,EAAE;QAAE,GAAG,SAAS;IAAC;IAC1D,qBACE;kBACE,cAAA,6LAAC,yJAAA,CAAA,OAAI;YACH,SAAS;YACT,MAAM;YACN,SAAS,WAAW;gBAAC,oIAAA,CAAA,mBAAgB;aAAC,GAAG,EAAE;;;;;;;AAInD;GAjBa;;QAOe,+JAAA,CAAA,mBAAgB;;;KAP/B","debugId":null}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["file:///Users/nikita/Desktop/bankDash/BankDash/src/hooks/useUserBalance.ts"],"sourcesContent":["import { ICard } from '@/types/User.type'\nimport { useUser } from './useUser'\n\nexport const useUserBalance = () => {\n  const { data } = useUser()\n\n  const cards: ICard[] = data?.cards\n\n  const balance = cards?.reduce((sum, { balance }) => Number(balance) + sum, 0)\n\n  return { balance }\n}\n"],"names":[],"mappings":";;;AACA;;;AAEO,MAAM,iBAAiB;;IAC5B,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,2HAAA,CAAA,UAAO,AAAD;IAEvB,MAAM,QAAiB,MAAM;IAE7B,MAAM,UAAU,OAAO,OAAO,CAAC,KAAK,EAAE,OAAO,EAAE,GAAK,OAAO,WAAW,KAAK;IAE3E,OAAO;QAAE;IAAQ;AACnB;GARa;;QACM,2HAAA,CAAA,UAAO","debugId":null}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":["file:///Users/nikita/Desktop/bankDash/BankDash/src/components/UI/BalanceHistory/useBalanceHistoryCalculator.ts"],"sourcesContent":["import { DAYS, TRANSACTIONS } from '@/config/constants'\nimport { useUserBalance } from '@/hooks/useUserBalance'\nimport { ITransaction } from '@/types/Transactions.type'\nimport { useMemo } from 'react'\n\ninterface IData {\n  day: string[]\n  balance: number[]\n}\n\nexport const useBalanceHistoryCalculator = (transactions: ITransaction[]) => {\n  const { balance } = useUserBalance()\n\n  const data = useMemo(() => {\n    const treansactions_reverse = transactions?.reverse()\n    let local_balance = balance\n\n    let DATA: IData = {\n      day: [],\n      balance: [],\n    }\n\n    treansactions_reverse?.forEach((el: ITransaction) => {\n      const date = new Date(el.date)\n      const day = DAYS[date.getDay() - 1]\n\n      if (el.type !== TRANSACTIONS.type.cancelled) {\n        if (el.type === TRANSACTIONS.type.incoming) {\n          DATA.day.push(day)\n          DATA.balance.push(Number(local_balance) - Number(el.amount))\n          local_balance -= Number(el.amount)\n        } else {\n          DATA.day.push(day)\n          DATA.balance.push(Number(local_balance) + Number(el.amount))\n          local_balance += Number(el.amount)\n        }\n      }\n    })\n\n    return { labels: DATA.day.reverse(), data: DATA.balance.reverse() }\n  }, [transactions])\n\n  return { labels: data.labels, data: data.data }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AAEA;;;;;AAOO,MAAM,8BAA8B,CAAC;;IAC1C,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,iIAAA,CAAA,iBAAc,AAAD;IAEjC,MAAM,OAAO,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;qDAAE;YACnB,MAAM,wBAAwB,cAAc;YAC5C,IAAI,gBAAgB;YAEpB,IAAI,OAAc;gBAChB,KAAK,EAAE;gBACP,SAAS,EAAE;YACb;YAEA,uBAAuB;6DAAQ,CAAC;oBAC9B,MAAM,OAAO,IAAI,KAAK,GAAG,IAAI;oBAC7B,MAAM,MAAM,6HAAA,CAAA,OAAI,CAAC,KAAK,MAAM,KAAK,EAAE;oBAEnC,IAAI,GAAG,IAAI,KAAK,6HAAA,CAAA,eAAY,CAAC,IAAI,CAAC,SAAS,EAAE;wBAC3C,IAAI,GAAG,IAAI,KAAK,6HAAA,CAAA,eAAY,CAAC,IAAI,CAAC,QAAQ,EAAE;4BAC1C,KAAK,GAAG,CAAC,IAAI,CAAC;4BACd,KAAK,OAAO,CAAC,IAAI,CAAC,OAAO,iBAAiB,OAAO,GAAG,MAAM;4BAC1D,iBAAiB,OAAO,GAAG,MAAM;wBACnC,OAAO;4BACL,KAAK,GAAG,CAAC,IAAI,CAAC;4BACd,KAAK,OAAO,CAAC,IAAI,CAAC,OAAO,iBAAiB,OAAO,GAAG,MAAM;4BAC1D,iBAAiB,OAAO,GAAG,MAAM;wBACnC;oBACF;gBACF;;YAEA,OAAO;gBAAE,QAAQ,KAAK,GAAG,CAAC,OAAO;gBAAI,MAAM,KAAK,OAAO,CAAC,OAAO;YAAG;QACpE;oDAAG;QAAC;KAAa;IAEjB,OAAO;QAAE,QAAQ,KAAK,MAAM;QAAE,MAAM,KAAK,IAAI;IAAC;AAChD;GAjCa;;QACS,iIAAA,CAAA,iBAAc","debugId":null}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"sources":["file:///Users/nikita/Desktop/bankDash/BankDash/src/components/UI/BalanceHistory/BalanceHistory.tsx"],"sourcesContent":["import CardWrapper from '@/components/loayout/CardWrapper/CardWrapper'\nimport { NotEnougtData } from '../NotEnougtData/NotEnougtData'\nimport styles from './BalanceHistory.module.scss'\nimport { BALANCE_HISTORY_DATA } from './BalanceHistory.data'\nimport { LineChart } from '../Chart/Line/Line-chart'\nimport { useTransactionsByDate } from '@/hooks/useTransactionsByDate'\nimport { useBalanceHistoryCalculator } from './useBalanceHistoryCalculator'\n\nconst BalanceHistory = () => {\n  const { data: transactions, isLoading } = useTransactionsByDate()\n\n  if (!transactions && !isLoading) {\n    return <NotEnougtData />\n  }\n\n  const { labels, data } = useBalanceHistoryCalculator(transactions)\n\n  return (\n    <div className={styles.wrapper}>\n      <h2>Balance History</h2>\n      <CardWrapper className={styles.card}>\n        <LineChart\n          chartData={{\n            ...BALANCE_HISTORY_DATA,\n            labes: labels,\n            data: data,\n          }}\n          isPlugin={true}\n        />\n      </CardWrapper>\n    </div>\n  )\n}\n\nexport default BalanceHistory\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAEA,MAAM,iBAAiB;;IACrB,MAAM,EAAE,MAAM,YAAY,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,wIAAA,CAAA,wBAAqB,AAAD;IAE9D,IAAI,CAAC,gBAAgB,CAAC,WAAW;QAC/B,qBAAO,6LAAC,6JAAA,CAAA,gBAAa;;;;;IACvB;IAEA,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,2KAAA,CAAA,8BAA2B,AAAD,EAAE;IAErD,qBACE,6LAAC;QAAI,WAAW,4LAAA,CAAA,UAAM,CAAC,OAAO;;0BAC5B,6LAAC;0BAAG;;;;;;0BACJ,6LAAC,8JAAA,CAAA,UAAW;gBAAC,WAAW,4LAAA,CAAA,UAAM,CAAC,IAAI;0BACjC,cAAA,6LAAC,6JAAA,CAAA,YAAS;oBACR,WAAW;wBACT,GAAG,sKAAA,CAAA,uBAAoB;wBACvB,OAAO;wBACP,MAAM;oBACR;oBACA,UAAU;;;;;;;;;;;;;;;;;AAKpB;GAxBM;;QACsC,wIAAA,CAAA,wBAAqB;QAMtC,2KAAA,CAAA,8BAA2B;;;KAPhD;uCA0BS","debugId":null}}]
}