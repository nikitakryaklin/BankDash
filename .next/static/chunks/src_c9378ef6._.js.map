{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/UI/ExpenseStatistics/ExpenseStatistics.module.scss.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"card\": \"ExpenseStatistics-module-scss-module__Gly9zG__card\",\n  \"wrapper\": \"ExpenseStatistics-module-scss-module__Gly9zG__wrapper\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA"}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["file:///Users/nikita/Desktop/bankDash/BankDash/src/utiles/getToolTip.ts"],"sourcesContent":["export function getToolTip() {\n  return {\n    tooltip: {\n      backgroundColor: '#ffffff',\n      borderColor: '#718ebf',\n      borderWidth: 1,\n      titleColor: '#343c6a',\n      bodyColor: '#718ebf',\n      cornerRadius: 11,\n      usePointStyle: true,\n    },\n  }\n}\n"],"names":[],"mappings":";;;AAAO,SAAS;IACd,OAAO;QACL,SAAS;YACP,iBAAiB;YACjB,aAAa;YACb,aAAa;YACb,YAAY;YACZ,WAAW;YACX,cAAc;YACd,eAAe;QACjB;IACF;AACF","debugId":null}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":["file:///Users/nikita/Desktop/bankDash/BankDash/src/components/UI/Chart/Circle/useCircleChartData.ts"],"sourcesContent":["import { IChartCircle } from '@/types/Chart.interface'\nimport { getToolTip } from '@/utiles/getToolTip'\n\nexport function useCircleChartData(DATA: IChartCircle) {\n  const data = {\n    labels: DATA.labels,\n    datasets: [\n      {\n        label: DATA.label,\n        data: DATA.datasets,\n        backgroundColor: DATA.backgroundColor,\n        borderWidth: DATA.border,\n      },\n    ],\n  }\n\n  const options = {\n    layout: {\n      padding: 0,\n    },\n    cutout: DATA.cutout,\n    plugins: {\n      legend: {\n        display: true,\n        position: 'bottom',\n        labels: {\n          color: '#718ebf',\n          usePointStyle: true,\n          pointStyle: 'circle',\n          padding: DATA.padding,\n        },\n        align: 'center',\n      },\n      ...getToolTip(),\n    },\n  }\n\n  return { options, data }\n}\n"],"names":[],"mappings":";;;AACA;;AAEO,SAAS,mBAAmB,IAAkB;IACnD,MAAM,OAAO;QACX,QAAQ,KAAK,MAAM;QACnB,UAAU;YACR;gBACE,OAAO,KAAK,KAAK;gBACjB,MAAM,KAAK,QAAQ;gBACnB,iBAAiB,KAAK,eAAe;gBACrC,aAAa,KAAK,MAAM;YAC1B;SACD;IACH;IAEA,MAAM,UAAU;QACd,QAAQ;YACN,SAAS;QACX;QACA,QAAQ,KAAK,MAAM;QACnB,SAAS;YACP,QAAQ;gBACN,SAAS;gBACT,UAAU;gBACV,QAAQ;oBACN,OAAO;oBACP,eAAe;oBACf,YAAY;oBACZ,SAAS,KAAK,OAAO;gBACvB;gBACA,OAAO;YACT;YACA,GAAG,CAAA,GAAA,8HAAA,CAAA,aAAU,AAAD,GAAG;QACjB;IACF;IAEA,OAAO;QAAE;QAAS;IAAK;AACzB","debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file:///Users/nikita/Desktop/bankDash/BankDash/src/components/UI/Chart/Circle/Circle-chart.tsx"],"sourcesContent":["import { IChartCircle } from '@/types/Chart.interface'\nimport { useCircleChartData } from './useCircleChartData'\n\nimport { Doughnut } from 'react-chartjs-2'\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js'\nimport { NotEnougtData } from '../../NotEnougtData/NotEnougtData'\nChartJS.register(ArcElement, Tooltip, Legend)\n\nexport const CircleChart = ({ chartData }: { chartData: IChartCircle }) => {\n  const { data, options } = useCircleChartData({ ...chartData })\n\n  if (chartData.labels.length === 0) {\n    return <NotEnougtData />\n  }\n  return (\n    <>\n      {/* @ts-ignore */}\n      <Doughnut data={data} options={options} />\n    </>\n  )\n}\n"],"names":[],"mappings":";;;;AACA;AAEA;AACA;AACA;;;;;;;AACA,+JAAA,CAAA,QAAO,CAAC,QAAQ,CAAC,+JAAA,CAAA,aAAU,EAAE,+JAAA,CAAA,UAAO,EAAE,+JAAA,CAAA,SAAM;AAErC,MAAM,cAAc,CAAC,EAAE,SAAS,EAA+B;;IACpE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,mKAAA,CAAA,qBAAkB,AAAD,EAAE;QAAE,GAAG,SAAS;IAAC;IAE5D,IAAI,UAAU,MAAM,CAAC,MAAM,KAAK,GAAG;QACjC,qBAAO,6LAAC,6JAAA,CAAA,gBAAa;;;;;IACvB;IACA,qBACE;kBAEE,cAAA,6LAAC,yJAAA,CAAA,WAAQ;YAAC,MAAM;YAAM,SAAS;;;;;;;AAGrC;GAZa;;QACe,mKAAA,CAAA,qBAAkB;;;KADjC","debugId":null}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":["file:///Users/nikita/Desktop/bankDash/BankDash/src/utiles/getDateByDays.ts"],"sourcesContent":["export const getDateByDays = (day: number) => {\n  const date = new Date()\n  date.setDate(date.getDate() - day)\n  return date.toISOString()\n}\n"],"names":[],"mappings":";;;AAAO,MAAM,gBAAgB,CAAC;IAC5B,MAAM,OAAO,IAAI;IACjB,KAAK,OAAO,CAAC,KAAK,OAAO,KAAK;IAC9B,OAAO,KAAK,WAAW;AACzB","debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///Users/nikita/Desktop/bankDash/BankDash/src/hooks/useTransactionsByDate.ts"],"sourcesContent":["import { transactionsService } from '@/service/transaction.service'\nimport { IUser } from '@/types/User.type'\nimport { getDateByDays } from '@/utiles/getDateByDays'\nimport { useQuery, useQueryClient } from '@tanstack/react-query'\n\nexport const useTransactionsByDate = (day = 7) => {\n  const user = useQueryClient().getQueryData(['user']) as IUser\n\n  const result: string[] = []\n  user?.cards?.forEach((card) => result.push(card.number))\n\n  const date = getDateByDays(day)\n\n  const { data, isLoading, isSuccess } = useQuery({\n    queryKey: ['transactions', 'byDate'],\n    queryFn: () => transactionsService.getByDate(result, date),\n    enabled: !!user && result.length > 0,\n    select: (data) => data.data,\n  })\n\n  return { data, isLoading, isSuccess }\n}\n"],"names":[],"mappings":";;;AAAA;AAEA;AACA;AAAA;;;;;AAEO,MAAM,wBAAwB,CAAC,MAAM,CAAC;;IAC3C,MAAM,OAAO,CAAA,GAAA,yLAAA,CAAA,iBAAc,AAAD,IAAI,YAAY,CAAC;QAAC;KAAO;IAEnD,MAAM,SAAmB,EAAE;IAC3B,MAAM,OAAO,QAAQ,CAAC,OAAS,OAAO,IAAI,CAAC,KAAK,MAAM;IAEtD,MAAM,OAAO,CAAA,GAAA,iIAAA,CAAA,gBAAa,AAAD,EAAE;IAE3B,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,8KAAA,CAAA,WAAQ,AAAD,EAAE;QAC9C,UAAU;YAAC;YAAgB;SAAS;QACpC,OAAO;8CAAE,IAAM,2IAAA,CAAA,sBAAmB,CAAC,SAAS,CAAC,QAAQ;;QACrD,SAAS,CAAC,CAAC,QAAQ,OAAO,MAAM,GAAG;QACnC,MAAM;8CAAE,CAAC,OAAS,KAAK,IAAI;;IAC7B;IAEA,OAAO;QAAE;QAAM;QAAW;IAAU;AACtC;GAhBa;;QACE,yLAAA,CAAA,iBAAc;QAOY,8KAAA,CAAA,WAAQ","debugId":null}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":["file:///Users/nikita/Desktop/bankDash/BankDash/src/components/UI/ExpenseStatistics/useExpenseStatisticsCalculator.ts"],"sourcesContent":["import { TRANSACTIONS } from '@/config/constants'\nimport { ITransaction } from '@/types/Transactions.type'\nimport { useMemo } from 'react'\n\ninterface IData {\n  dataset: number\n  color: string\n}\n\nconst COLORS: Record<string, string> = {\n  Products: '#A8D86D',\n  Transport: '#FC7900',\n  Utilities: '#5A91C5',\n  CommunicationsAndInternet: '#343C6A',\n  Entertainment: '#00B894',\n  Health: '#C56FC5',\n  Education: '#FF6B6B',\n  Shopping: '#00A8FF',\n  Travel: '#8868FF',\n  Subscriptions: '#FA00FF',\n  Gifts: '#5B82E6',\n  Income: '#FF7855',\n  BonusesAndCashback: '#37B24D',\n  Investments: '#4DA3D9',\n  Other: '#FFBB38',\n  Send: '#BDBDBD',\n}\n\nexport const useExpenseStatisticsCalculator = (\n  transactions: ITransaction[]\n) => {\n  const EXPENSE_STATISTICS_DATA = useMemo(() => {\n    const data: Record<string, IData> = {}\n    transactions?.forEach((el) => {\n      if (el.type === TRANSACTIONS.type.outgoing) {\n        if (!data[el.category]) {\n          data[el.category] = { dataset: el.amount, color: COLORS[el.category] }\n        } else {\n          data[el.category].dataset += el.amount\n        }\n      }\n    })\n\n    console.log(data)\n    const labels = Object.keys(data)\n    const dataset = Object.values(data).map((el) => el.dataset)\n    const colors = Object.values(data).map((el) => el.color)\n\n    return {\n      labels: labels,\n      datasets: dataset,\n      backgroundColor: colors,\n      border: 6,\n      cutout: '0',\n      label: 'In a %',\n      padding: 5,\n    }\n  }, [transactions])\n  return { EXPENSE_STATISTICS_DATA }\n}\n"],"names":[],"mappings":";;;AAAA;AAEA;;;;AAOA,MAAM,SAAiC;IACrC,UAAU;IACV,WAAW;IACX,WAAW;IACX,2BAA2B;IAC3B,eAAe;IACf,QAAQ;IACR,WAAW;IACX,UAAU;IACV,QAAQ;IACR,eAAe;IACf,OAAO;IACP,QAAQ;IACR,oBAAoB;IACpB,aAAa;IACb,OAAO;IACP,MAAM;AACR;AAEO,MAAM,iCAAiC,CAC5C;;IAEA,MAAM,0BAA0B,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;2EAAE;YACtC,MAAM,OAA8B,CAAC;YACrC,cAAc;mFAAQ,CAAC;oBACrB,IAAI,GAAG,IAAI,KAAK,6HAAA,CAAA,eAAY,CAAC,IAAI,CAAC,QAAQ,EAAE;wBAC1C,IAAI,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,EAAE;4BACtB,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG;gCAAE,SAAS,GAAG,MAAM;gCAAE,OAAO,MAAM,CAAC,GAAG,QAAQ,CAAC;4BAAC;wBACvE,OAAO;4BACL,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC,OAAO,IAAI,GAAG,MAAM;wBACxC;oBACF;gBACF;;YAEA,QAAQ,GAAG,CAAC;YACZ,MAAM,SAAS,OAAO,IAAI,CAAC;YAC3B,MAAM,UAAU,OAAO,MAAM,CAAC,MAAM,GAAG;2FAAC,CAAC,KAAO,GAAG,OAAO;;YAC1D,MAAM,SAAS,OAAO,MAAM,CAAC,MAAM,GAAG;0FAAC,CAAC,KAAO,GAAG,KAAK;;YAEvD,OAAO;gBACL,QAAQ;gBACR,UAAU;gBACV,iBAAiB;gBACjB,QAAQ;gBACR,QAAQ;gBACR,OAAO;gBACP,SAAS;YACX;QACF;0EAAG;QAAC;KAAa;IACjB,OAAO;QAAE;IAAwB;AACnC;GA/Ba","debugId":null}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"sources":["file:///Users/nikita/Desktop/bankDash/BankDash/src/components/UI/ExpenseStatistics/ExpenseStatistics.tsx"],"sourcesContent":["import CardWrapper from '@/components/loayout/CardWrapper/CardWrapper'\nimport { NotEnougtData } from '../NotEnougtData/NotEnougtData'\nimport styles from './ExpenseStatistics.module.scss'\nimport { CircleChart } from '../Chart/Circle/Circle-chart'\n// import { EXPENSE_STATISTICS_DATA } from './ExpenseStatistics.data'\nimport { useTransactionsByDate } from '@/hooks/useTransactionsByDate'\nimport { useExpenseStatisticsCalculator } from './useExpenseStatisticsCalculator'\n\nconst ExpenseStatistics = () => {\n  const { data: transactions } = useTransactionsByDate()\n\n  const { EXPENSE_STATISTICS_DATA } =\n    useExpenseStatisticsCalculator(transactions)\n\n  return (\n    <div className={styles.wrapper}>\n      <h2>Expense Statistics</h2>\n      <CardWrapper className={styles.card}>\n        {/* <NotEnougtData /> */}\n\n        <CircleChart chartData={EXPENSE_STATISTICS_DATA} />\n      </CardWrapper>\n    </div>\n  )\n}\n\nexport default ExpenseStatistics\n"],"names":[],"mappings":";;;;AAAA;AAEA;AACA;AACA,qEAAqE;AACrE;AACA;;;;;;;;AAEA,MAAM,oBAAoB;;IACxB,MAAM,EAAE,MAAM,YAAY,EAAE,GAAG,CAAA,GAAA,wIAAA,CAAA,wBAAqB,AAAD;IAEnD,MAAM,EAAE,uBAAuB,EAAE,GAC/B,CAAA,GAAA,iLAAA,CAAA,iCAA8B,AAAD,EAAE;IAEjC,qBACE,6LAAC;QAAI,WAAW,kMAAA,CAAA,UAAM,CAAC,OAAO;;0BAC5B,6LAAC;0BAAG;;;;;;0BACJ,6LAAC,8JAAA,CAAA,UAAW;gBAAC,WAAW,kMAAA,CAAA,UAAM,CAAC,IAAI;0BAGjC,cAAA,6LAAC,iKAAA,CAAA,cAAW;oBAAC,WAAW;;;;;;;;;;;;;;;;;AAIhC;GAhBM;;QAC2B,wIAAA,CAAA,wBAAqB;QAGlD,iLAAA,CAAA,iCAA8B;;;KAJ5B;uCAkBS","debugId":null}}]
}